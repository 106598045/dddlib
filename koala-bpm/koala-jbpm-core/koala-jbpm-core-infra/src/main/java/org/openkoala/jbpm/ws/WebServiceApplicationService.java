
package org.openkoala.jbpm.ws;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import org.openkoala.jbpm.infra.EnvConfigHelper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "webServiceApplication", targetNamespace = "http://applicationImpl.jbpmDemo.jbpm.openkoala.org/", wsdlLocation = ".")
public class WebServiceApplicationService extends Service{

    private final static URL WEBSERVICEAPPLICATION_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(org.openkoala.jbpm.ws.WebServiceApplicationService.class.getName());
    private static String wsdlLocationUrl = EnvConfigHelper.getInstance().getProperty("jbpm.wsdl.localtion");
    static {
        URL url = null;
        String wsdlLocation = wsdlLocationUrl;
        logger.info("wsdlLocationUrl===@@@@@@@@@@@@"+wsdlLocation);
        try {
            URL baseUrl = org.openkoala.jbpm.ws.WebServiceApplicationService.class.getResource(".");
            url = new URL(baseUrl,wsdlLocation);
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: '"+wsdlLocation+"?wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        WEBSERVICEAPPLICATION_WSDL_LOCATION = url;
    }

    public WebServiceApplicationService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WebServiceApplicationService() {
        super(WEBSERVICEAPPLICATION_WSDL_LOCATION, new QName("http://applicationImpl.jbpmDemo.jbpm.openkoala.org/", "webServiceApplication"));
    }

    /**
     * 
     * @return
     *     returns WebServiceApplication
     */
    @WebEndpoint(name = "WebServiceApplicationImplPort")
    public WebServiceApplication getWebServiceApplicationImplPort() {
        return super.getPort(new QName("http://applicationImpl.jbpmDemo.jbpm.openkoala.org/", "WebServiceApplicationImplPort"), WebServiceApplication.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WebServiceApplication
     */
    @WebEndpoint(name = "WebServiceApplicationImplPort")
    public WebServiceApplication getWebServiceApplicationImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://applicationImpl.jbpmDemo.jbpm.openkoala.org/", "WebServiceApplicationImplPort"), WebServiceApplication.class, features);
    }
    
}
