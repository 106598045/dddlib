<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.dayatang.dddlib</groupId>
		<artifactId>dddlib-project</artifactId>
		<version>4.0.0</version>
	</parent>
	<artifactId>dddlib-ioc-jdk6</artifactId>
	<packaging>jar</packaging>
	<name>DDDLib IoC implemented by JDK6 ServiceLoader</name>
    <description>
        DDDLib IoC的JDK6实现，通过Jdk6InstanceProvider实现InstanceProvider。
        JDK6通过ServiceLoader可以实现简化版的IoC，但是有很多限制，例如所有的Bean都必须有无参构造函数。
    </description>

	<dependencies>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.parent.groupId}</groupId>
			<artifactId>dddlib-domain</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.parent.groupId}</groupId>
			<artifactId>dddlib-test</artifactId>
			<version>${project.parent.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>